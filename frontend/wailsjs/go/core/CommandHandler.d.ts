// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT
import {model} from '../models';
import {errorsx} from '../models';
import {context} from '../models';

export function AddRoleForUser(arg1:model.AddRoleForUser):Promise<void>;

export function ConnectEngine(arg1:string,arg2:string,arg3:string,arg4:number):Promise<void>;

export function CreateDatabase(arg1:model.CreateDatabase):Promise<void>;

export function CreateLogin(arg1:model.Login):Promise<void>;

export function CreateTable(arg1:model.CreateTable):Promise<void>;

export function CreateUser(arg1:model.CreateUserForLogin):Promise<void>;

export function DropDatabase(arg1:string):Promise<void>;

export function DropLogin(arg1:string):Promise<void>;

export function DropRoleForUser(arg1:model.DropRoleForUser):Promise<void>;

export function DropTable(arg1:model.DropTable):Promise<void>;

export function DropUser(arg1:model.DropUser):Promise<void>;

export function GetAllFromTable(arg1:string):Promise<Array<model.RowTable>>;

export function GetAppVersion():Promise<string>;

export function GetColumnsInfoByTableName(arg1:string):Promise<Array<model.TableColumn>>;

export function GetDatabaseById(arg1:number):Promise<model.DatabaseRes>;

export function GetDatabaseInfo(arg1:string):Promise<Array<model.DatabaseFileDetail>>;

export function GetDatabases():Promise<Array<string>>;

export function GetDatabasesByEngineId(arg1:number):Promise<Array<model.DatabaseRes>>;

export function GetEngineById(arg1:number):Promise<model.Engine>;

export function GetEngines():Promise<Array<model.Engine>>;

export function GetFormattedErrorModelUnused():Promise<errorsx.FormattedError>;

export function GetGuiConfig():Promise<model.GuiConfig>;

export function GetLogins():Promise<Array<model.Login>>;

export function GetSupportedLanguages():Promise<Array<string>>;

export function GetTablesByDatabase(arg1:string):Promise<Array<string>>;

export function GetTrackingStateUnused():Promise<model.TrackingState>;

export function GetUserById(arg1:number):Promise<model.User>;

export function GetUsers():Promise<Array<model.User>>;

export function GetUsersByEngineId(arg1:number):Promise<Array<model.User>>;

export function OpenResultsDirectory():Promise<void>;

export function RemoveDatabase(arg1:number):Promise<void>;

export function RemoveEngine(arg1:number):Promise<void>;

export function RemoveUser(arg1:number):Promise<void>;

export function SaveDatabase(arg1:model.DatabaseRes):Promise<void>;

export function SaveEngine(arg1:string,arg2:string,arg3:string,arg4:number):Promise<model.Engine>;

export function SaveLocale(arg1:string):Promise<void>;

export function SaveSidebarMinimized(arg1:boolean):Promise<void>;

export function SaveUser(arg1:string,arg2:string,arg3:number):Promise<void>;

export function SetContext(arg1:context.Context):Promise<void>;

export function ShutdownConnection():Promise<void>;
